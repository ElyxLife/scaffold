# TEMPLATE WORKFLOW - Automatic triggers disabled
# To enable this workflow in your project:
# 1. Uncomment the triggers under 'on:' section
# 2. Ensure you have the relevant directories: backend/, ui/, terraform/
# 3. Configure proper linting and formatting tools for your project

name: autofix.ci

on:
  # Automatic triggers disabled for template project
  # pull_request:
  # push:
  #   branches: [ "main" ]
  workflow_dispatch:

permissions:
  contents: read

jobs:
  autofix:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v4

    - name: Check if project directories exist
      run: |
        if [ ! -d "backend" ] && [ ! -d "ui" ] && [ ! -d "terraform" ]; then
          echo "‚ùå No backend/, ui/, or terraform/ directories found. This appears to be a template project."
          echo "To use this workflow, create the relevant directories with your code."
          exit 0
        fi

    # Backend: Python/Ruff formatting
    - name: Set up Python
      uses: actions/setup-python@v5
      with:
        python-version: 3.13

    - name: Install uv
      uses: astral-sh/setup-uv@v3

    - name: Install backend dependencies
      working-directory: ./backend
      run: uv sync

    - name: Fix backend linting issues
      working-directory: ./backend
      run: uv run ruff check --fix .

    - name: Format backend code
      working-directory: ./backend
      run: uv run ruff format .

    # Frontend: ESLint/Prettier formatting
    - name: Set up Node.js
      uses: actions/setup-node@v4
      with:
        node-version: 18
        cache: npm
        cache-dependency-path: ui/package-lock.json

    - name: Install frontend dependencies
      working-directory: ./ui
      run: npm ci

    - name: Fix frontend linting issues
      working-directory: ./ui
      run: npm run lint --fix || true

    # Infrastructure: Terraform formatting
    - name: Setup Terraform
      uses: hashicorp/setup-terraform@v3
      with:
        terraform_version: latest

    - name: Format Terraform files
      working-directory: ./terraform
      run: terraform fmt -recursive

    # Apply all fixes via autofix.ci
    - uses: autofix-ci/action@ff86a557419858bb967097bfc916833f5647fa8c